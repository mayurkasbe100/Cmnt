1. User Registration (Functional Requirement)
1.1 The system shall provide a user registration form that includes fields for name, email address, and password.
1.2 The system shall validate the email address to ensure it is in a valid format.
1.3 The system shall store the user's information securely and encrypt passwords.

2. User Authentication (Functional Requirement)
2.1 The system shall provide a login form where registered users can enter their email and password.
2.2 The system shall authenticate user credentials before granting access to the system.
2.3 The system shall provide a password recovery/reset functionality to allow users to reset their passwords.

3. Project Creation (Functional Requirement)
3.1 The system shall provide a form for creating new projects, allowing users to enter a project name, description, start date, and end date.
3.2 The system shall assign a unique identifier to each project created.
3.3 The system shall associate each project with a project owner.

4. Task Creation (Functional Requirement)
4.1 The system shall allow users to create tasks within projects, providing fields for a task title, description, assigned user(s), start date, end date, and priority.
4.2 The system shall assign a unique identifier to each task created.
4.3 The system shall associate each task with a project.

5. File Upload (Functional Requirement)
5.1 The system shall enable users to upload files and associate them with projects or tasks.
5.2 The system shall securely store uploaded files and ensure their accessibility to authorized project members.
5.3 The system shall support various file formats and sizes.

6. Team Communication (Functional Requirement)
6.1 The system shall provide communication channels (such as chat or comments) for project members to interact and collaborate.
6.2 The system shall allow real-time messaging and notifications for effective team communication.
6.3 The system shall provide the ability to tag users or notify specific team members in conversations.

-------------------------------------------------------------------------------------------

Business Entity 

user's --> creates --> Ad Details --> Post

USER
email address
password
phone number 
name

LOGIN
email_id
password

name 
category
contact_no
state

title
image
place 
price

-----------------------------------------------------------------------------


MySQL file
-- USER table
CREATE TABLE USER (
  email_address VARCHAR(255),
  password VARCHAR(255),
  phone_number VARCHAR(255),
  name VARCHAR(255)
);

-- LOGIN table
CREATE TABLE LOGIN (
  email_id VARCHAR(255),
  password VARCHAR(255)
);

-- AD_DETAILS table
CREATE TABLE AD_DETAILS (
  ad_id INT PRIMARY KEY AUTO_INCREMENT,
  user_email_address VARCHAR(255),
  title VARCHAR(255),
  image VARCHAR(255),
  place VARCHAR(255),
  price DECIMAL(10,2),
  FOREIGN KEY (user_email_address) REFERENCES USER(email_address)
);

-- POST table
CREATE TABLE POST (
  ad_id INT PRIMARY KEY,
  name VARCHAR(255),
  category VARCHAR(255),
  contact_no VARCHAR(255),
  state VARCHAR(255),
  FOREIGN KEY (ad_id) REFERENCES AD_DETAILS(ad_id)
);
